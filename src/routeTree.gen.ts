/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ReviseRouteImport } from './routes/revise'
import { Route as ImportFromGoogleDriveRouteImport } from './routes/import-from-google-drive'
import { Route as GoogleAuthSettingsRouteImport } from './routes/google-auth-settings'
import { Route as CreateNewCardsRouteImport } from './routes/create-new-cards'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EditCardIdRouteImport } from './routes/edit-card.$id'

const ReviseRoute = ReviseRouteImport.update({
  id: '/revise',
  path: '/revise',
  getParentRoute: () => rootRouteImport,
} as any)
const ImportFromGoogleDriveRoute = ImportFromGoogleDriveRouteImport.update({
  id: '/import-from-google-drive',
  path: '/import-from-google-drive',
  getParentRoute: () => rootRouteImport,
} as any)
const GoogleAuthSettingsRoute = GoogleAuthSettingsRouteImport.update({
  id: '/google-auth-settings',
  path: '/google-auth-settings',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateNewCardsRoute = CreateNewCardsRouteImport.update({
  id: '/create-new-cards',
  path: '/create-new-cards',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditCardIdRoute = EditCardIdRouteImport.update({
  id: '/edit-card/$id',
  path: '/edit-card/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-new-cards': typeof CreateNewCardsRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
  '/revise': typeof ReviseRoute
  '/edit-card/$id': typeof EditCardIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-new-cards': typeof CreateNewCardsRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
  '/revise': typeof ReviseRoute
  '/edit-card/$id': typeof EditCardIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create-new-cards': typeof CreateNewCardsRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
  '/revise': typeof ReviseRoute
  '/edit-card/$id': typeof EditCardIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-new-cards'
    | '/google-auth-settings'
    | '/import-from-google-drive'
    | '/revise'
    | '/edit-card/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-new-cards'
    | '/google-auth-settings'
    | '/import-from-google-drive'
    | '/revise'
    | '/edit-card/$id'
  id:
    | '__root__'
    | '/'
    | '/create-new-cards'
    | '/google-auth-settings'
    | '/import-from-google-drive'
    | '/revise'
    | '/edit-card/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateNewCardsRoute: typeof CreateNewCardsRoute
  GoogleAuthSettingsRoute: typeof GoogleAuthSettingsRoute
  ImportFromGoogleDriveRoute: typeof ImportFromGoogleDriveRoute
  ReviseRoute: typeof ReviseRoute
  EditCardIdRoute: typeof EditCardIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/revise': {
      id: '/revise'
      path: '/revise'
      fullPath: '/revise'
      preLoaderRoute: typeof ReviseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/import-from-google-drive': {
      id: '/import-from-google-drive'
      path: '/import-from-google-drive'
      fullPath: '/import-from-google-drive'
      preLoaderRoute: typeof ImportFromGoogleDriveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/google-auth-settings': {
      id: '/google-auth-settings'
      path: '/google-auth-settings'
      fullPath: '/google-auth-settings'
      preLoaderRoute: typeof GoogleAuthSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create-new-cards': {
      id: '/create-new-cards'
      path: '/create-new-cards'
      fullPath: '/create-new-cards'
      preLoaderRoute: typeof CreateNewCardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit-card/$id': {
      id: '/edit-card/$id'
      path: '/edit-card/$id'
      fullPath: '/edit-card/$id'
      preLoaderRoute: typeof EditCardIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateNewCardsRoute: CreateNewCardsRoute,
  GoogleAuthSettingsRoute: GoogleAuthSettingsRoute,
  ImportFromGoogleDriveRoute: ImportFromGoogleDriveRoute,
  ReviseRoute: ReviseRoute,
  EditCardIdRoute: EditCardIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
