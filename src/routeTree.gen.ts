/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ImportFromGoogleDriveRouteImport } from './routes/import-from-google-drive'
import { Route as ImportRouteImport } from './routes/import'
import { Route as GoogleAuthSettingsRouteImport } from './routes/google-auth-settings'
import { Route as IndexRouteImport } from './routes/index'

const ImportFromGoogleDriveRoute = ImportFromGoogleDriveRouteImport.update({
  id: '/import-from-google-drive',
  path: '/import-from-google-drive',
  getParentRoute: () => rootRouteImport,
} as any)
const ImportRoute = ImportRouteImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => rootRouteImport,
} as any)
const GoogleAuthSettingsRoute = GoogleAuthSettingsRouteImport.update({
  id: '/google-auth-settings',
  path: '/google-auth-settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import': typeof ImportRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import': typeof ImportRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/google-auth-settings': typeof GoogleAuthSettingsRoute
  '/import': typeof ImportRoute
  '/import-from-google-drive': typeof ImportFromGoogleDriveRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/google-auth-settings'
    | '/import'
    | '/import-from-google-drive'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/google-auth-settings' | '/import' | '/import-from-google-drive'
  id:
    | '__root__'
    | '/'
    | '/google-auth-settings'
    | '/import'
    | '/import-from-google-drive'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GoogleAuthSettingsRoute: typeof GoogleAuthSettingsRoute
  ImportRoute: typeof ImportRoute
  ImportFromGoogleDriveRoute: typeof ImportFromGoogleDriveRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/import-from-google-drive': {
      id: '/import-from-google-drive'
      path: '/import-from-google-drive'
      fullPath: '/import-from-google-drive'
      preLoaderRoute: typeof ImportFromGoogleDriveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/import': {
      id: '/import'
      path: '/import'
      fullPath: '/import'
      preLoaderRoute: typeof ImportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/google-auth-settings': {
      id: '/google-auth-settings'
      path: '/google-auth-settings'
      fullPath: '/google-auth-settings'
      preLoaderRoute: typeof GoogleAuthSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GoogleAuthSettingsRoute: GoogleAuthSettingsRoute,
  ImportRoute: ImportRoute,
  ImportFromGoogleDriveRoute: ImportFromGoogleDriveRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
