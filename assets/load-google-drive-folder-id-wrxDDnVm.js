import{r as d,C as x,T as I,c as z,d as T,G as E,j as L}from"./index-BBlGBWHT.js";import{o as g,a as S,l as F,s as r,n as c,t as O}from"./schemas-DBNbPpsj.js";import{c as D,B as b,a as k}from"./page-content-wrapper-CMnHi2oT.js";/**
 * @license lucide-react v0.539.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const j=[["path",{d:"m17 2 4 4-4 4",key:"nntrym"}],["path",{d:"M3 11v-1a4 4 0 0 1 4-4h14",key:"84bu3i"}],["path",{d:"m7 22-4-4 4-4",key:"1wqhfi"}],["path",{d:"M21 13v1a4 4 0 0 1-4 4H3",key:"1rx37r"}]],B=D("repeat",j),v=g({title:r(),description:r().optional(),hints:S(r()).optional()}),G=g({id:r(),knownLanguageSide:v,targetLanguageSide:v,tags:S(r()).optional(),createdAt:c(),updatedAt:c()}),_=O([c(),c(),c(),c().optional().nullable()]),$=g({id:r(),title:r(),color:_}),N=g({version:F(1),content:g({cards:S(G),tags:S($)})});function P(a){const o=JSON.parse(a);if(o.version!==1)throw new Error("Unsupported file version");return N.parse(o),o}async function R(a){const{cardsStore:o,tagsStore:s,fileContent:i}=a,n=P(i),t=[];for(const e of n.content.cards)t.push({id:e.id,tags:e.tags||[],targetLanguageSide:{title:e.targetLanguageSide.title,description:e.targetLanguageSide.description||"",hints:e.targetLanguageSide.hints||[]},knownLanguageSide:{title:e.knownLanguageSide.title,description:e.knownLanguageSide.description||"",hints:e.knownLanguageSide.hints||[]},createdAt:e.createdAt,updatedAt:e.updatedAt});const l=[];for(const e of n.content.tags)l.push({id:e.id,title:e.title,createdAt:e.createdAt,updatedAt:e.updatedAt,color:{angle:e.color[0],saturation:e.color[1],lightness:e.color[2],alpha:e.color[3]||100}});o.getState().addCards(t),s.getState().addTags(l)}async function J(a){const{cardsStore:o,tagsStore:s}=a,i={version:1,content:{cards:o.getState().cardsIds.map(n=>{const t=o.getState().cards[n];return{id:t.id,updatedAt:t.updatedAt,createdAt:t.createdAt,tags:t.tags.length?t.tags:void 0,targetLanguageSide:{title:t.targetLanguageSide.title,description:t.targetLanguageSide.description.length?t.targetLanguageSide.description:void 0,hints:t.targetLanguageSide.hints.length?t.targetLanguageSide.hints:void 0},knownLanguageSide:{title:t.knownLanguageSide.title,description:t.knownLanguageSide.description.length?t.knownLanguageSide.description:void 0,hints:t.knownLanguageSide.hints.length?t.knownLanguageSide.hints:void 0}}}),tags:s.getState().tagsIds.map(n=>{const t=s.getState().tags[n];return{id:t.id,title:t.title,updatedAt:t.updatedAt,createdAt:t.createdAt,color:[t.color.angle,t.color.saturation,t.color.lightness,t.color.alpha||100]}})}};return JSON.stringify(i)}function M(a){const o=d.useContext(x),s=d.useContext(I),i=z(),n=T(),t=d.useContext(E),[l,e]=d.useState(!1),[m,u]=d.useState(!1),[w,f]=d.useState(null);async function C(){if(!(m||l)){a.onClick?.(),u(!0),f(null);try{await n.authorize();const p=t.getState(),A=p.authorizationData.state==="authorized"&&p.authorizationData.tokenInfo.accessToken;for(const y in i.fileToLoadRecords){const h=await fetch(`https://www.googleapis.com/drive/v3/files/${y}?alt=media`,{headers:{Authorization:`Bearer ${A}`}});if(h.status!==200){f(`Error fetching file, status: ${h.status}`),u(!1);return}await R({cardsStore:o,tagsStore:s,fileContent:await h.text()})}e(!0)}catch(p){u(!1),f(`Error fetching file ${p}`);return}u(!1)}}return L.jsx(b,{className:"self-start",theme:w?k.warning:k.primary,hint:w||`One-click import (${i.itemsCount} files)`,isLoading:m,disabled:l||!i.itemsCount,onClick:C,children:L.jsx(B,{size:a.iconSize||24})})}async function U(){const a=await gapi.client.drive.files.list({q:"mimeType = 'application/vnd.google-apps.folder' and trashed = false and 'root' in parents and name = 'Parrot Cards'",fields:"files(id, name, mimeType, parents)",pageSize:1});return a.result.files?.length?a.result.files[0].id:(await gapi.client.drive.files.create({resource:{name:"Parrot Cards",mimeType:"application/vnd.google-apps.folder"},fields:"id, name, mimeType, parents"})).result.id}export{M as O,J as a,U as l,R as p};
